apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
        - name: frontend
          image: ${FRONTEND_IMAGE}  # Correct interpolation of the environment variable
          ports:
            - containerPort: 3000  # Corrected to match the port your application is running on
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
            limits:
              cpu: 200m
              memory: 200Mi
          livenessProbe:
            httpGet:
              path: /
              port: 3000  # Corrected to match the containerPort
            initialDelaySeconds: 10
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /
              port: 3000  # Corrected to match the containerPort
            initialDelaySeconds: 5
            periodSeconds: 5

---
apiVersion: v1
kind: Service
metadata:
  name: frontend
spec:
  type: NodePort  # Use ClusterIP if external access is not required, or LoadBalancer if using a cloud provider
  selector:
    app: frontend
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3000  # Corrected to match the containerPort
