version: '3.9'

x-common-env:
  &common-env
  KONG_DATABASE: postgres
  KONG_PG_DATABASE: ${KONG_PG_DATABASE:-kong}
  KONG_PG_HOST: ${KONG_PG_HOST:-postgres-kong}
  KONG_PG_USER: ${KONG_PG_USER:-kong}
  KONG_PG_PASSWORD_FILE: /run/secrets/kong_postgres_password
  KONG_PROXY_LISTEN: ${KONG_PROXY_LISTEN:-0.0.0.0:8000}
  KONG_ADMIN_LISTEN: ${KONG_ADMIN_LISTEN:-0.0.0.0:8001}
  KONG_PROXY_ACCESS_LOG: /dev/stdout
  KONG_PROXY_ERROR_LOG: /dev/stderr

secrets:
  kong_postgres_password:
    file: ./POSTGRES_PASSWORD

volumes:
  kong_data: {}
  my-db: {}
  kong-db: {}

networks:
  kong-net:
    external: false

services:
  kong:
    image: "${KONG_DOCKER_TAG:-kong:latest}"
    depends_on:
      postgres-kong:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      <<: *common-env
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ERROR_LOG: /dev/stderr
    secrets:
      - kong_postgres_password
    networks:
      - kong-net
    ports:
      - "8000:8000" # Proxy
      - "8001:8001" # Admin API
      - "8443:8443" # Proxy SSL
      - "8444:8444" # Admin API SSL
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001"]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: on-failure:5
    read_only: false
    security_opt:
      - no-new-privileges

  kong-migration:
      image: "${KONG_DOCKER_TAG:-kong:latest}"
      command: "kong migrations bootstrap"
      networks:
        - default
      restart: on-failure
      secrets:
        - kong_postgres_password
      environment:
        <<: *common-env
      links:
        - postgres-kong
      depends_on:
        - postgres-kong

  postgres-kong:
    image: postgres:latest
    environment:
      POSTGRES_DB: ${KONG_PG_DATABASE:-kong}
      POSTGRES_USER: ${KONG_PG_USER:-kong}
      POSTGRES_PASSWORD_FILE: /run/secrets/kong_postgres_password
    secrets:
      - kong_postgres_password
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-U", "kong"]
      interval: 30s
      timeout: 30s
      retries: 3
    networks:
      - kong-net
    volumes:
      - kong-db:/var/lib/postgresql/data

  mysqldb:
    image: mysql:8.0.29
    environment:
      MYSQL_DATABASE: "my_db"
      MYSQL_PASSWORD: "password"
      MYSQL_ROOT_PASSWORD: "password"
    volumes:
      - my-db:/var/lib/mysql
      - ./scripts/mysqldb_update_privileges.sh:/docker-entrypoint-initdb.d/mysqldb_update_privileges.sh
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  service-one:
    build: ../../downstream-services/service-one
    image: service-one:1.0
    depends_on:
      - kong
    ports:
      - "3001:3001"

  service-two:
    build: ../../downstream-services/service-two
    image: service-two:1.0
    depends_on:
      - kong
    ports:
      - "3002:3002"

  auth-service:
    build: ../../authentication
    image: auth-service:1.0
    depends_on:
      - kong
      - redis
      - mysqldb
    ports:
      - "3003:3003"

  client:
    build: ../../frontend
    image: client:1.0
    depends_on:
      - kong
    ports:
      - "8080:3000"

  redis:
    image: redis:7.2-rc2-alpine3.18
    command: redis-server --requirepass password
    healthcheck:
      test: [ "CMD", "redis-cli", "-a", "password", "--raw", "incr", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - kong-net

